@using Autenticacao.Web.Models.ViewModel
@using System.Text.Json
@model TarefasViewModel

@{
    ViewData["Title"] = "Manager";
}
@if (Model.status == false)
{   
    <script>
        alert('@Model.mensagem');
    </script>
}
<div class="container">
    <p>Lista de tarefas</p>
    <form asp-controller="Tarefas" asp-action="AddTask" method="post">
        <input type="hidden" name="IdUsuario" value="@Model.IdUsuario" />
        <div class="row">
            <div class="col-10">
                <div class="d-flex flex-column gap-1">
                    <input type="text" name="descricao" />
                    <span class="text-danger">@Html.ValidationMessage("descricao")</span>
                </div>
            </div>
            <div class="col-2">
                <input class="btn btn-outline-secondary" type="submit" value="Adicionar" />
            </div>
        </div>
    </form>

    @foreach (var tarefa in Model.Tarefas)
    {
        <div class="d-flex justify-content-between">
            <p>@tarefa.Descricao</p>
            <div class="d-flex align-items-center gap-1">
                @if (tarefa.Concluida)
                {
                    <i class="bi bi-check-square-fill text-success btn"></i>
                }
                else
                {
                    <button class="btn" onclick="checkTask('@tarefa.Id', '@Model.IdUsuario')">
                        <i class="bi bi-check-square text-dark"></i>
                    </button>
                }
                <button class="btn" onclick="deleteTask('@tarefa.Id', '@Model.IdUsuario')">
                    <i class="bi bi-trash text-danger"></i>
                </button>
            </div>
        </div>
    }
    <div id="boxlistatarefa" class="d-flex flex-column gap-1">

    </div>
    <div class="d-flex gap-1">
        <button id="bttodas" class="btn btn-outline-secondary">All</button>
        <button id="btativas" class="btn btn-outline-secondary">Ativos</button>
        <button id="btconcluidas" class="btn btn-outline-secondary">Concluidos</button>
    </div>
</div>
@section Scripts {
    <script>
        var listaDeTarefas= JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Tarefas))')
        console.log(typeof(listaDeTarefas))
        $('#bttodas').on('click', function(){
            listaDeTarefas.forEach(tarefa => {
                $('#boxlistatarefa').append(componentTarefa(tarefa.Id, tarefa.Descricao, tarefa.Concluida, tarefa.IdUsuario))
            });
        });
        function componentTarefa(id, descricao, status, usuario){
            return `
                <div class="d-flex justify-content-between">
                    <p>${descricao}</p>
                    <div class="d-flex align-items-center gap-1">
                        ${status ? '<i class="bi bi-check-square-fill text-success btn"></i>' : '<button class="btn" onclick="checkTask(\${id}\, \${usuario}\)"><i class="bi bi-check-square text-dark"></i></button>'}
                        <button class="btn" onclick="deleteTask(${id}, ${usuario})">
                            <i class="bi bi-trash text-danger"></i>
                        </button>
                    </div>
                </div>
            `
        }

        function checkTask(idtask, iduser){
            $.ajax({
                url: '/Tarefas/CheckTask',
                type: 'GET',
                data: { id: idtask, idUsuario: iduser },
                success: function (data) {
                    if (data.status === false){
                        alert(data.mensagem);
                    }
                    location.reload();
                }
            }); 
        }
        function deleteTask(idtask, iduser){
            $.ajax({
                url: '/Tarefas/DeleteTask',
                type: 'POST',
                data: { id: idtask, idUsuario: iduser },
                success: function (data) {
                    location.reload();
                }
            });
        }
    </script>
}